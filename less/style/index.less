@base: #f938ab;

div{
    background-color:@base;
    padding:50px;
}

//1.在Less里面，变量可以动态计算。
@nice-blue: #f938ab;
@light-blue: @nice-blue + #333;

.div1 {
  background-color: @light-blue;
}


//2.变量混合.如果带了()则该类名不会编译出来，但会存在
.rounded-corners (@radius: 15px) {
  border-radius: @radius;
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
}

#div1 {
    padding:20px;
    width:200px;
    height:100px;
    border:2px solid red;
  .rounded-corners;
}
#div2 {
    padding:20px;
    width:200px;
    height:100px;
    border:2px solid green;
  .rounded-corners(30px);
}

//4.嵌套规则
#div3 {
    h1 {
        font-size: 26px;
        font-weight: bold;
    }
    span {
        font-size: 12px;
        a {
            text-decoration: none;
            &:hover {
                border-width: 1px;
            }
        }
    }
}

//5.函数的使用
.mixin (dark, @color) {
  color: darken(@color, 10%);
}
.mixin (light, @color) {
  color: lighten(@color, 10%);
}
.mixin (@________, @color) {
  display: block;
}
@switch1: dark;
@switch2: light;

.class1 {
  .mixin(@switch1, #888);
}
.class2 {
  .mixin(@switch2, #888);
}

//6.条件判断
.mixin2 (@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixin2 (@a) when (lightness(@a) < 50%) {
  background-color: white;
}
.mixin2 (@a) {
  color: @a;
}

.class3 { .mixin2(#ddd) }
.class4 { .mixin2(#555) }